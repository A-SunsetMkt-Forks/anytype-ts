.block.blockCover {
    .loaderWrapper { background: rgba(0,0,0,0.3); }
    .loaderWrapper {
        .loader { border-color: $colorShapePrimary; border-left-color: $colorSystemAccent100; }
    }

    .elements {
        .btn.white { background: $colorShapeSecondary; }
        .btn.white:hover { background: $colorBgPrimary; }

        .btn {
			.icon.icon { background-image: url('#{$themePath}/icon/add/icon1.svg'); }
			.icon.addCover { background-image: url('#{$themePath}/icon/add/cover1.svg'); }
			.icon.layout { background-image: url('#{$themePath}/icon/add/layout1.svg'); }
			.icon.relation { background-image: url('#{$themePath}/icon/add/relation1.svg'); }
		}
    }

    .author a:hover { color: $colorSystemAccent100; }
}

.blocks {
    /* Common */

    .block {
        .icon.dnd { border-color: rgba(217, 212, 184, 0.14); }

		.emptyToggle { color: var(--color-text-secondary); }

		.colResize {
			.line { background: $colorShapeSecondary; }
		}
    }
    .block:hover > .wrapMenu > .icon.dnd { background-image: url('#{$themePath}/icon/block/menu1.svg'); }

    /* BlockIconPage */

    .block.blockIconPage {
        .iconObject { box-shadow: 0px 0px 0px 2px $colorBgPrimary; }
    }

    /* BlockIconUser */

    .block.blockIconUser {
        .iconObject { box-shadow: 0px 0px 0px 2px $colorBgPrimary; }
    }

	/* BlockFeatured */

	.block.blockFeatured { color: var(--color-text-secondary); }
    .block.blockFeatured {
        .cellContent:hover, .cellContent.hover { background: $colorShapeHighlightMedium; }
    }

    /* BlockFile */

    .block.blockFile {
        .loaderWrapper { border: 0px; }
    }

	/* BlockRelation */

	.block.blockRelation {
        .cell.canEdit:hover { background: $colorShapeHighlightMedium; }
    }

    /* BlockMedia */

    .block.blockMedia {
        .loaderWrapper { border: 0px; }
        .pdfWrapper { box-shadow: 0px 0px 0px 1px $colorShapePrimary; }
    }
    .block.blockMedia.isAudio.withContent > .wrapContent { background-color: $colorShapeHighlightMedium; }

    /* BlockDataview */

    .block.blockDataview {
		.loadMore { border-color: $colorShapePrimary; }
		.loadMore {
			.icon { background-image: url('#{$themePath}/arrow/loadMore0.svg'); }
		}

		.loadMore:hover {
			.icon { background-image: url('#{$themePath}/arrow/loadMore1.svg'); }
		}

		.icon.edit { background-image: url('#{$themePath}/icon/dataview/button/edit0.svg'); }
		.icon.edit:hover { background-image: url('#{$themePath}/icon/dataview/button/edit1.svg'); }
        .icon.plus { background-image: url('#{$themePath}/icon/plus/menu0.svg'); }
        .icon.plus:hover { background-image: url('#{$themePath}/icon/plus/menu1.svg'); }

		.dateSelect {
			.icon.arrow { background-image: url('#{$themePath}/arrow/dateSelect.svg'); border-radius: 4px; }
			.icon.arrow:hover { background-color: $colorShapeHighlightMedium; }

			.btn:hover { background-color: $colorShapeHighlightMedium; }
		}

		.dataviewEmpty { border-color: $colorShapeSecondary; }

		.dataviewHead { border-color: $colorShapeSecondary; }
		.dataviewHead {
			.icon:hover { background-color: $colorShapeHighlightMedium; }
			.icon.source { background-image: url('#{$themePath}/icon/dataview/button/source0.svg'); opacity: 0; }
		}

        .dataviewControls {
			> .sides {
				> .side.right {
					.buttonWrap.withSelect {
						.button.select { border-left-color: rgba(23,23,23,0.1); }
						.button.select:after { background-image:  url('~img/arrow/button/black.svg'); }
					}
				}
			}
            .viewItem { color: var(--color-text-secondary); }
            .viewItem {
                .icon.arrow { background-image: url('#{$themePath}/arrow/view.svg'); }
            }
            .viewItem.isDragging { background: $colorShapeHighlightMedium; }

			.icon:hover, .icon.active { background-color: $colorShapeHighlightMedium; }
			.icon.btn-filter.on { background-image: url('#{$themePath}/icon/dataview/button/filter1.svg'); }
			.icon.btn-sort.on { background-image: url('#{$themePath}/icon/dataview/button/sort1.svg'); }
        }
		.dataviewControls::after { background-color: $colorShapeSecondary; }

		.dataviewSelection {
			.side.right {
				.element:hover { background-color: $colorShapeHighlightMedium; }
			}
		}

        .cellHead.isDragging { background: $colorShapeHighlightMedium; }
		.cellHead.isDragging::after { background-color: $colorShapeHighlightMedium; }

        .viewContent.viewGrid,
		.viewContent.viewList {
			.cell.add { color: var(--color-text-secondary); }
			.cell.add {
				.btn:hover {
					.icon.plus { background-image: url('#{$themePath}/icon/plus/menu1.svg'); }
				}
			}
		}

        .viewContent.viewGrid {
            .row { box-shadow: 0px 1px $colorShapeSecondary inset; }
			.row:hover { background-color: rgba(223, 221, 208, 0.04); }

			.loadMore { box-shadow: 0px 1px $colorShapeSecondary inset; border-color: $colorShapeSecondary; }

			.cellHead .resize .line { background-color: $colorShapeSecondary; }
			.cellHead.cellKeyHover::after, 
			.cellHead.active::after,
			.cellHead.isDragging::after { background-color: rgba(223, 221, 208, 0.04); }

			.cellHead.last::after, .cellHead.active::after { background: none; }
			.cellHead.last:hover, .cellHead.last.active {
				.icon.plus { background-image: url('#{$themePath}/icon/plus/menu1.svg'); }
			}

			.cell.cellKeyHover { background-color: rgba(223, 221, 208, 0.04); }
        }

        .viewContent.viewGallery {
            .card { background: $colorBgPrimary; border-color: $colorShapeTertiary; }
			.card:hover { border-color: $colorShapeSecondary; background: rgba(166, 166, 166, 0.04); }
            .card {
                .cover { border-color: $colorShapePrimary; background-color: $colorShapeSecondary; }
            }

			.card.isEditing { border: 2px solid $colorSystemAccent100; }
        }

        .viewContent.viewBoard {
			.ghost { border-color: $colorSystemAccent100; }
            .cardContent { background: $colorBgSecondary; border-color: $colorShapeTertiary; }
			.card.add { background: $colorBgSecondary; border-color: $colorShapeSecondary; }

			.column {
				.head { background: $colorBgPrimary; }
				.side.right {
					.icon:hover { background-color: $colorShapeSecondary; }
				}
			}
			.column.withColor {
				.head .empty { color: var(--color-text-secondary); }
			}

			.card.add:hover, .card:hover .cardContent { border-color: $colorShapePrimary; }
			.card.add:hover {
                .icon { background-image: url('#{$themePath}/icon/plus/column1.svg'); }
            }

			.card.isEditing {
				.cardContent { border: 2px solid $colorSystemAccent100; }
			}
        }

		.viewContent.viewCalendar {
			.table, .day { border-color: $colorShapeSecondary; }
			.table {
				.head {
					.item { border-color: $colorShapeSecondary; }
				}
			}

			.day {
				.item:hover::before { background: $colorShapeHighlightMedium; }
			}
		}

		.viewContent.viewGraph {
			canvas { background: $colorBgPrimary; }
		}

		.content {
			.scrollWrap { background: $colorBgPrimary; }
		}
    }

    /* BlockType */

    .block.blockType {
        .item { border-color: $colorShapeSecondary; color: var(--color-text-secondary); }
        .item.hover { background: $colorShapeHighlightMedium; }
    }

    /* BlockText */

    .block.blockText {
        markupcode { background: $colorShapeHighlightMedium; color: $colorSystemAccent100; }
		markuplink, markupobject { border-color: var(--color-text-secondary); }
    }

    .block.blockText.textCallout > .wrapContent { background: rgba(140, 158, 165, 0.25); }
    .block.blockText.textCode > .wrapContent { background: rgba(140, 158, 165, 0.25); }

    /* BlockLink */

    .block.blockLink {
        .loading, .deleted { color: var(--color-text-secondary); }

		.linkCard.c48.withIcon {
			.iconObject { background-color: $colorShapeTertiary; }
		}
    }
	.block.blockLink.card {
		.linkCard {
			.side.left, .side.right { border-color: $colorShapeTertiary; }
		}
	}

	.block.blockLink.card:hover {
		.linkCard {
			.side.left, .side.right { border-color: $colorShapePrimary; }
		}
	}

    /* BlockDiv */

    .block.blockDiv {
        .line { border-color: $colorShapePrimary; }
        .dot { background: $colorShapePrimary !important; }
    }

    /* BlockEmbed */

    .block.blockEmbed {
		.preview { background-color: $colorShapeHighlightLight; }
		.preview {
			.icon.embed-latex { background-image: url('#{$themePath}/icon/block/embed/latex.svg'); }
			.icon.embed-mermaid { background-image: url('#{$themePath}/icon/block/embed/mermaid.svg'); }
			.icon.embed-youtube { background-image: url('#{$themePath}/icon/block/embed/youtube.svg'); }
			.icon.embed-vimeo { background-image: url('#{$themePath}/icon/block/embed/vimeo.svg'); }
			.icon.embed-googleMaps { background-image: url('#{$themePath}/icon/block/embed/googleMaps.svg'); }
			.icon.embed-soundcloud { background-image: url('#{$themePath}/icon/block/embed/soundcloud.svg'); }
			.icon.embed-chart { background-image: url('#{$themePath}/icon/block/embed/chart.svg'); }
			.icon.embed-miro { background-image: url('#{$themePath}/icon/block/embed/miro.svg'); }
			.icon.embed-figma { background-image: url('#{$themePath}/icon/block/embed/figma.svg'); }
		}

        .wrap.isEditing { background-color: $colorShapeHighlightLight; }
        #input { background: $colorShapeSecondary; border-color: $colorShapeHighlightLight; }
		#placeholder { color: var(--color-text-secondary); }
    }

    /* BlockBookmark */

    .block.blockBookmark {
		.loaderWrapper { border: 0px; }
		.deleted { color: var(--color-text-secondary); }

        .inner { border-color: transparent; background-color: $colorShapeHighlightMedium; }
        .inner {
    	    .descr { color: var(--color-text-secondary); }
	        .link { color: var(--color-text-secondary); }

            .side.right { border-color: $colorShapeTertiary; }
        }
    }

    /* BlockTableOfContenst */

	.block.blockTableOfContents { 
		.item { color: var(--color-text-secondary); }
		.item:hover span { border-color: var(--color-text-secondary); }
	}

	/* BlockTable */

	.block.blockTable { 
		.plusButton .icon { background-color: $colorShapeTertiary; background-image: url('#{$themePath}/icon/table/plus.svg'); }
		.plusButton.circle .icon { background-color: $colorShapeTertiary; }

		.handle { 
			.inner::before { background-color: $colorBgPrimary; }
		}
		
		.row { border-color: $colorShapePrimary; }
		.row.isHeader {
			.cell { background-color: $colorShapeHighlightMedium; }
		}

		.cell { background: $colorBgPrimary; border-color: $colorShapePrimary; }
		.cell {
			.icon.menu:hover {
				.inner { box-shadow: 0px 0px; background-color: $colorShapePrimary; }
			}
		}
	}
}
