name: Release Nightly

on:
  push:
    branches:
      - nightly-ci-test
  workflow_dispatch:
#  schedule:
#    - cron: '0 0 * * *' # every day at midnight
#      filters:
#        branches:
#          include:
#            - 'nightly-ci-test'

permissions:
  contents: 'write'

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - macos-12
          #- ubuntu-latest
          #- windows-latest

    steps:
      - name: Setup
        run: |
          git config --global url."https://${{secrets.USER}}:${{secrets.TOKEN}}@github.com/".insteadOf "https://github.com/"
          git config --global url."https://${{secrets.USER}}:${{secrets.TOKEN}}@api.github.com/".insteadOf "https://api.github.com/"

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.22

      - name: Setup GO
        run: |
          go version
          echo GOPATH=$(go env GOPATH) >> $GITHUB_ENV
          echo GOBIN=$(go env GOPATH)/bin >> $GITHUB_ENV
          echo $(go env GOPATH)/bin >> $GITHUB_PATH

      - name: Install AzureSignTool
        if: matrix.os == 'windows-latest'
        run: dotnet tool install --global AzureSignTool

      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Setup distutils
        if: matrix.os != 'windows-latest'
        run: sudo -H pip install setuptools

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 20.9.0

      - name: Install Webpack
        run: npm install --save-dev webpack-cli --legacy-peer-deps

      - name: Update locale
        run: npm run update:locale
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}

      #- name: Update Deps
      #  run: npm run build:deps

      - name: Nightly mode settings
        shell: bash
        run: |
          echo MIDDLEWARE_VERSION=nightly >> $GITHUB_ENV
          echo PUBLISH_URL=https://${{ secrets.NIGHTLY_AWS_S3_BUCKET }}.s3.${{ secrets.NIGHTLY_AWS_REGION }}.amazonaws.com >> $GITHUB_ENV
          mv package-nightly.json package.json # set nightly.json config

      - name: Update Addon Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          ./update-ci.sh --user="${{secrets.USER}}" --token="${{secrets.TOKEN}}" --os="${{matrix.os}}" --middleware-version="${{env.MIDDLEWARE_VERSION}}"

      - name: Update Addon
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          ./update-ci.sh --user="${{secrets.USER}}" --token="${{secrets.TOKEN}}" --os="${{matrix.os}}" --middleware-version="${{env.MIDDLEWARE_VERSION}}" --arch="arm"
          ./update-ci.sh --user="${{secrets.USER}}" --token="${{secrets.TOKEN}}" --os="${{matrix.os}}" --middleware-version="${{env.MIDDLEWARE_VERSION}}" --arch="amd"

      - name: Build Native Messaging Host Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:nmh-win
        env:
          CGO_ENABLED: 0

      - name: Build Native Messaging Host
        if: matrix.os != 'windows-latest'
        run: npm run build:nmh
        env:
          CGO_ENABLED: 0

      - name: Build Front Mac OS
        if: matrix.os == 'macos-12'
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{secrets.TOKEN}}
          mac_certs: ${{ secrets.MAC_CERT_TEXT }}
          mac_certs_password: ${{ secrets.MAC_CERT_PASS }}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
          args: --arm64 --x64
        env:
          DEBUG: electron-builder
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
          APPLETEAM: ${{ secrets.APPLETEAM }}
          USE_HARD_LINKS: false
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          AWS_ACCESS_KEY_ID: ${{ secrets.NIGHTLY_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.NIGHTLY_AWS_SECRET_ACCESS_KEY }}
          PUBLISH_URL: ${{ env.PUBLISH_URL }}

      - name: Build Front Other
        if: matrix.os != 'macos-12'
        uses: samuelmeuli/action-electron-builder@v1
        with:
          github_token: ${{secrets.TOKEN}}
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        env:
          DEBUG: electron-builder
          USE_HARD_LINKS: false
          AZURE_KEY_VAULT_URI: ${{ secrets.AZURE_KEY_VAULT_URI }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_CERT_NAME: ${{ secrets.AZURE_CERT_NAME }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
          AWS_ACCESS_KEY_ID: ${{ secrets.NIGHTLY_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.NIGHTLY_AWS_SECRET_ACCESS_KEY }}
          PUBLISH_URL: ${{ env.PUBLISH_URL }}
